"oce", "here","reshape2", "viridis", "export", "rnaturalearth",
"rnaturalearthdata", "forcats","sf", "geosphere")
ipak(packages)
# Create a base Layer map of the core sampled areas, as per JL and LR meeting on 2023-02-16
# Create Base Layer Maps will all numbered stations labeled, with a more focused region (not whole WGOA)
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# get bathymetry data
b = getNOAA.bathy(lon1 = -166, lon2 = -140, lat1 = 52, lat2 = 62,
resolution = 15)
## Querying NOAA database ...
## This may take seconds to minutes, depending on grid size
## Building bathy matrix ...
# convert bathymetry to data frame
bf = fortify.bathy(b)
# get regional polygons
reg = map_data("world2Hires")
reg = subset(reg, region %in% c('USSR', 'USA'))
# convert lat longs
reg$long = (360 - reg$long)*-1
# set map limits, whole region
lons = c(-167, -149) #-140 = large map
lats = c(53, 60.25) # 52 = large map
### Station Data
WGOAdata <- read.csv(here("Data","WGOA station_list_dougherty_2019_ProjInstrutions.csv"))
WGOAdata$Longitude..W. <- WGOAdata$Longitude..W.*-1
# Remove stations near Unimak and SW of Shumagins for 2025 Start
WGOAdata_25 <- WGOAdata[-c(1:25),]
WGOAdata_25$Station <- seq_len(nrow(WGOAdata_25))
WGOAdata_25$Longitude..W. <- WGOAdata_25$Longitude..W.*-1
######################################
# make plot
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+
# add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-100),linewidth=c(0.5),colour="darkgrey")+
# add 200m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.2),colour="black")+
geom_sf(data = world) + coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAdata_25, mapping = aes(Longitude..W., Latitude.N.), #, shape = Gear.Sampled
size = 1, show.legend = FALSE)+
#Delete "shape..." for just stations
#geom_text(data = WGOAdata, mapping = aes(Longitude..W., Latitude.N., label = Station ),
#          nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+
theme_bw()+ xlab("Longitude")+ ylab("Latitude")+
theme(axis.title = element_text(size = 20))+
theme(axis.text.x=element_text(size=15, color = "black"), axis.text.y = element_text(size=15, color = "black"))+
theme(legend.position = "none")+
annotate("text", x=-163,y=57.4912, label = "Bering Sea", size = 12)+
annotate("text", x=-153.495,y=57.4912,size = 8, label = "Kodiak Is.")+
annotate("text", x=-157.5,y=59.7, label = "Alaska",
size = 15, fontface = "bold")
GOARegion_Map_New
WGOAdata <- read.csv(here("Data","WGOA station_list_dougherty_2019_ProjInstrutions.csv"))
WGOAdata_25 <- WGOAdata[-c(1:25),]
WGOAdata_25$Station <- seq_len(nrow(WGOAdata_25))
WGOAdata_25$Longitude..W. <- WGOAdata_25$Longitude..W.*-1
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+
# add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-100),linewidth=c(0.5),colour="darkgrey")+
# add 200m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.2),colour="black")+
geom_sf(data = world) + coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAdata_25, mapping = aes(Longitude..W., Latitude.N.), #, shape = Gear.Sampled
size = 1, show.legend = FALSE)+
#Delete "shape..." for just stations
#geom_text(data = WGOAdata, mapping = aes(Longitude..W., Latitude.N., label = Station ),
#          nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+
theme_bw()+ xlab("Longitude")+ ylab("Latitude")+
theme(axis.title = element_text(size = 20))+
theme(axis.text.x=element_text(size=15, color = "black"), axis.text.y = element_text(size=15, color = "black"))+
theme(legend.position = "none")+
annotate("text", x=-163,y=57.4912, label = "Bering Sea", size = 12)+
annotate("text", x=-153.495,y=57.4912,size = 8, label = "Kodiak Is.")+
annotate("text", x=-157.5,y=59.7, label = "Alaska",
size = 15, fontface = "bold")
GOARegion_Map_New
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("tidyr",  "dplyr","lubridate","hms", "ggplot2", "ggmap", "lattice", "stringr", "data.table",
"tibble","readxl", "sf","maps", "mapdata", "mapplots", "mapview", "marmap", "Cairo", "ncdf4",
"oce", "here","reshape2", "viridis", "export", "rnaturalearth",
"rnaturalearthdata", "forcats","sf", "geosphere")
ipak(packages)
WGOAdata <- read.csv(here("Data","WGOA station_list_dougherty_2019_ProjInstrutions.csv"))
WGOAdata_02 <- WGOAdata[-c(8:25),]
WGOAdata_02$Station <- seq_len(nrow(WGOAdata_02))
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+
# add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-100),linewidth=c(0.5),colour="darkgrey")+
# add 200m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.2),colour="black")+
geom_sf(data = world) + coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAdata_02, mapping = aes(Longitude..W., Latitude.N.), #, shape = Gear.Sampled
size = 1, show.legend = FALSE) +
geom_text(data = WGOAdata_02,
aes(x = Longitude..W., y = Latitude.N.,label = Grid.ID, vjust = -0.08, size = 1)) +
scale_shape_discrete()+
labs(title = "DY25-06: EcoFOCI Spring Ichthyoplankton Survey") +
theme_bw()+ xlab("Longitude")+ ylab("Latitude")+
theme(axis.title = element_text(size = 20) ,
axis.text.x=element_text(size=15, color = "black"),
axis.text.y = element_text(size=15, color = "black"),
legend.position = "none") +
annotate("text", x=-163,y=57.4912, label = "Bering Sea", size = 12)+
annotate("text", x=-153.495,y=57.4912,size = 8, label = "Kodiak Is.")+
annotate("text", x=-157.5,y=59.7, label = "Alaska",
size = 15, fontface = "bold")
GOARegion_Map_New
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+
# add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-100),linewidth=c(0.5),colour="darkgrey")+
# add 200m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.2),colour="black")+
geom_sf(data = world) + coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAdata_02, mapping = aes(Longitude..W., Latitude.N.), #, shape = Gear.Sampled
size = 1, show.legend = FALSE) +
geom_text(data = WGOAdata_02,
aes(x = Longitude..W., y = Latitude.N.,label = Grid.ID, vjust = -0.08, size = 1)) +
scale_shape_discrete()+
labs(title = "DY25-06: EcoFOCI Spring Ichthyoplankton Survey") +
theme_bw()+ xlab("Longitude")+ ylab("Latitude")+
theme(axis.title = element_text(size = 20) ,
axis.text.x=element_text(size=15, color = "black"),
axis.text.y = element_text(size=15, color = "black"),
legend.position = "none") +
annotate("text", x=-163,y=57.4912, label = "Bering Sea", size = 12)+
annotate("text", x=-153.495,y=57.4912,size = 8, label = "Kodiak Is.")+
annotate("text", x=-157.5,y=59.7, label = "Alaska",
size = 15, fontface = "bold")
GOARegion_Map_New
WGOAdata_02$Longitude..W. <- WGOAdata_02$Longitude..W.*-1
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+
# add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-100),linewidth=c(0.5),colour="darkgrey")+
# add 200m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.2),colour="black")+
geom_sf(data = world) + coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAdata_02, mapping = aes(Longitude..W., Latitude.N.), #, shape = Gear.Sampled
size = 1, show.legend = FALSE) +
geom_text(data = WGOAdata_02,
aes(x = Longitude..W., y = Latitude.N.,label = Grid.ID, vjust = -0.08, size = 1)) +
scale_shape_discrete()+
labs(title = "DY25-06: EcoFOCI Spring Ichthyoplankton Survey") +
theme_bw()+ xlab("Longitude")+ ylab("Latitude")+
theme(axis.title = element_text(size = 20) ,
axis.text.x=element_text(size=15, color = "black"),
axis.text.y = element_text(size=15, color = "black"),
legend.position = "none") +
annotate("text", x=-163,y=57.4912, label = "Bering Sea", size = 12)+
annotate("text", x=-153.495,y=57.4912,size = 8, label = "Kodiak Is.")+
annotate("text", x=-157.5,y=59.7, label = "Alaska",
size = 15, fontface = "bold")
GOARegion_Map_New
lons = c(-153, -149)
lats = c(58, 60.25)
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+
# add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-100),linewidth=c(0.5),colour="darkgrey")+
# add 200m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.2),colour="black")+
geom_sf(data = world) + coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAdata_02, mapping = aes(Longitude..W., Latitude.N.), #, shape = Gear.Sampled
size = 1, show.legend = FALSE) +
geom_text(data = WGOAdata_02,
aes(x = Longitude..W., y = Latitude.N.,label = Grid.ID, vjust = -0.08, size = 1)) +
scale_shape_discrete()+
labs(title = "DY25-06: EcoFOCI Spring Ichthyoplankton Survey") +
theme_bw()+ xlab("Longitude")+ ylab("Latitude")+
theme(axis.title = element_text(size = 20) ,
axis.text.x=element_text(size=15, color = "black"),
axis.text.y = element_text(size=15, color = "black"),
legend.position = "none") +
annotate("text", x=-163,y=57.4912, label = "Bering Sea", size = 12)+
annotate("text", x=-153.495,y=57.4912,size = 8, label = "Kodiak Is.")+
annotate("text", x=-157.5,y=59.7, label = "Alaska",
size = 15, fontface = "bold")
GOARegion_Map_New
View(WGOAdata_02)
WGOAdata_03 <- WGOAdata[-c(8:25, 183:197),]
lons = c(-167, -149) #-140 = large map
lats = c(53, 60.25) # 52 = large map
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+
# add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-100),linewidth=c(0.5),colour="darkgrey")+
# add 200m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.2),colour="black")+
geom_sf(data = world) + coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAdata_03, mapping = aes(Longitude..W., Latitude.N.), #, shape = Gear.Sampled
size = 1, show.legend = FALSE) +
geom_text(data = WGOAdata_02,
aes(x = Longitude..W., y = Latitude.N.,label = Grid.ID, vjust = -0.08, size = 1)) +
scale_shape_discrete()+
labs(title = "DY25-06: EcoFOCI Spring Ichthyoplankton Survey") +
theme_bw()+ xlab("Longitude")+ ylab("Latitude")+
theme(axis.title = element_text(size = 20) ,
axis.text.x=element_text(size=15, color = "black"),
axis.text.y = element_text(size=15, color = "black"),
legend.position = "none") +
annotate("text", x=-163,y=57.4912, label = "Bering Sea", size = 12)+
annotate("text", x=-153.495,y=57.4912,size = 8, label = "Kodiak Is.")+
annotate("text", x=-157.5,y=59.7, label = "Alaska",
size = 15, fontface = "bold")
GOARegion_Map_New
WGOAdata <- read.csv(here("Data","WGOA station_list_dougherty_2019_ProjInstrutions.csv"))
WGOAdata$Longitude..W. <- WGOAdata$Longitude..W.*-1
# Remove stations SW of Shumagins for 2025 Start
WGOAdata_03 <- WGOAdata[-c(8:25,183:197),]
#WGOAdata_03$Station <- seq_len(nrow(WGOAdata_03))
WGOAdata_03$Longitude..W. <- WGOAdata_03$Longitude..W.*-1
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+
# add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-100),linewidth=c(0.5),colour="darkgrey")+
# add 200m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.2),colour="black")+
geom_sf(data = world) + coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAdata_03, mapping = aes(Longitude..W., Latitude.N.), #, shape = Gear.Sampled
size = 1, show.legend = FALSE) +
# geom_text(data = WGOAdata_02,
#           aes(x = Longitude..W., y = Latitude.N.,label = Grid.ID, vjust = -0.08, size = 1)) +
scale_shape_discrete()+
labs(title = "DY25-06: EcoFOCI Spring Ichthyoplankton Survey") +
theme_bw()+ xlab("Longitude")+ ylab("Latitude")+
theme(axis.title = element_text(size = 20) ,
axis.text.x=element_text(size=15, color = "black"),
axis.text.y = element_text(size=15, color = "black"),
legend.position = "none") +
annotate("text", x=-163,y=57.4912, label = "Bering Sea", size = 12)+
annotate("text", x=-153.495,y=57.4912,size = 8, label = "Kodiak Is.")+
annotate("text", x=-157.5,y=59.7, label = "Alaska",
size = 15, fontface = "bold")
GOARegion_Map_New
WGOAdata_03$Longitude..W. <- WGOAdata_03$Longitude..W.*-1
View(WGOAdata_03)
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+
# add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-100),linewidth=c(0.5),colour="darkgrey")+
# add 200m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.2),colour="black")+
geom_sf(data = world) + coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAdata_03, mapping = aes(Longitude..W., Latitude.N.), #, shape = Gear.Sampled
size = 1, show.legend = FALSE) +
# geom_text(data = WGOAdata_02,
#           aes(x = Longitude..W., y = Latitude.N.,label = Grid.ID, vjust = -0.08, size = 1)) +
scale_shape_discrete()+
labs(title = "DY25-06: EcoFOCI Spring Ichthyoplankton Survey") +
theme_bw()+ xlab("Longitude")+ ylab("Latitude")+
theme(axis.title = element_text(size = 20) ,
axis.text.x=element_text(size=15, color = "black"),
axis.text.y = element_text(size=15, color = "black"),
legend.position = "none") +
annotate("text", x=-163,y=57.4912, label = "Bering Sea", size = 12)+
annotate("text", x=-153.495,y=57.4912,size = 8, label = "Kodiak Is.")+
annotate("text", x=-157.5,y=59.7, label = "Alaska",
size = 15, fontface = "bold")
GOARegion_Map_New
write.csv(WGOAdata_03, file = here("Data","For Dyson","2025-03-07 DY25-06 Project Instructions Waypoints.csv"))
View(WGOAdata_03)
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("tidyr",  "dplyr","lubridate","hms", "ggplot2", "ggmap", "lattice", "stringr", "data.table",
"tibble","readxl", "sf","maps", "mapdata", "mapplots", "mapview", "marmap", "Cairo", "ncdf4",
"oce", "here","reshape2", "viridis", "export", "rnaturalearth", "kableExtra",
"rnaturalearthdata", "forcats","sf", "geosphere")
ipak(packages)
# Create Base Layer Maps will all numbered stations labeled, with a more focused region (not whole WGOA)
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
WGOAdata <- read.csv(here("Data","2025","2025-03-06 DY2506 PI Waypoints & Gear.csv"))
### Create Station & Runtime Dataset ############
###All Stations: based on "Station Column" of "WGOA station_list_dougherty_2019_ProjInstrutions.csv", currently
# in "Data"
AllSta<- c(0:254)
# Log of Removed Stations before Survey
# (5/11/23): B 38:44,68:76
#Stations Left to Sample
# Completed Stations
CompleteScenL <- length(c()) #Fill in with completed StaTDL stations
# Staions Remaining
StaTDL<-c(0:254)
### Cutting B stations for time
STA.0516 <- c(157:159,166,168,170,172,174,176,178:180)
STA.0520 <- c(167:177) # All Shelikof Stations Cut
#B_Drop_Vec <- c(STA.0516,STA.0517)
#Drop Stations by subset using updated above vector, keep drops by date
#WGOAdata <- WGOAdata %>% subset(!(Station %in% STA.0516))
# Save CSV of above for Day to Day
#write.csv(WGOAdata, here("Data","DY23-07_Day2Day.csv"))
# Reverse Order Stations for Reference (DO NOT DELETE)
#
#            c(1:9,24:28,59:53,84:77, 92:85, 100:93, 107:101,113:108,119:114,
#           125:120, 131:126, 136:132,141:137, 142:142,152:148, 156:153, 159:157,165:160,
#           166:179,180,213:208,216:220,228:225,234:238,271)
ScenName <- "Stations Completed"
Scenario<-StaTDL # Always Change to Updated Stations Remaining
FinalSta<-data.frame("Station"=Scenario,"Stn_Order"= (CompleteScenL+1):(CompleteScenL+length(Scenario)))
# 1. Station Selection Through Scenario (above)
Sta <- WGOAdata %>% left_join(.,FinalSta) %>%
filter(Station %in% FinalSta$Station) %>%
arrange(Stn_Order)
# 2. Choose Departure Date
#DH_SIP <- ymd_hm("2023-05-15 12:00")
#depart <- DH_SIP + dhours(9) # pre-survey calculations, takes ~8 hours to get to STA 1 from DH
# Use below during survey
depart <- lubridate::now(tzone = "America/Anchorage") + dhours(16.5) # Alaska time, for at sea calculations
# 3. Create data.frame that mirrors "Final Station Runtime.xlsx"=
SRTdata <- Sta %>%
mutate(Bongo_hrs = ifelse(Gear.Sampled == "BONGO", 0.33,0)) %>% # BONGO at all stations
mutate(BON_CTD_hrs = ifelse(Gear.Sampled == "BONGO,CTD",0.83,0)) %>%
mutate(BON_CalVET_hrs = ifelse(Gear.Sampled == "BONGO,CALVET", 0.66,0)) %>%
mutate(BON_Cal_CTD_hrs = ifelse(Gear.Sampled == "BONGO,CALVET,CTD",1.16,0)) %>%
#<<<<<<< Updated upstream
mutate(Station_Time = lubridate::dhours(rowSums(across(c(Bongo_hrs,BON_CTD_hrs,BON_CalVET_hrs,BON_Cal_CTD_hrs))))) %>%
mutate(Ship_Speed = 11) %>%  # Ship speed is Variable
mutate(lat_rad = LAT*pi/180) %>% mutate(long_rad = LON*pi/180) %>%
mutate(long_dif = long_rad - shift(long_rad)) %>%
#>>>>>>> Stashed changes
mutate(Dist_NM = ifelse(Station == 0,0,0) ) %>%
mutate(Dist_NM = distGeo(cbind(LON,LAT),cbind(shift(LON),shift(LAT)))/(1000*1.852)) %>%
# distGEO does what code below does in base r
#  mutate(Dist_NM = acos((sin(lag(lat_rad))*sin(lat_rad))+(cos(lag(lat_rad))*cos(lat_rad)*cos(long_dif)))/(pi/180)*60) %>%
mutate(Steam_T = Dist_NM/Ship_Speed) %>%
mutate(Steam_T = lubridate::dhours(Steam_T))
#Write .csv of new Station Order for Oscar Dyson crew
ODsta <- SRTdata %>% select(Grid.ID,LAT,LON,Gear.Sampled,Stn_Order)
View(ODsta)
View(SRTdata)
WGOA_wp <- WGOAdata_03 %>% rename (LAT = Latitude.N., LON = Longitude..W.) %>%
mutate(Gear.Sampled = ifelse(Grid.ID %in% c("DH","Kodiak"), "Port", Grid.ID)) %>%
mutate(Gear.Sampled = ifelse(grepl("FOX", Grid.ID), "LINE8", Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Grid.ID %in% c("gv161","gx161","gz161",
"hb161","hd161","hf161"), "BONGO,CTD", Gear.Sampled )) %>%
mutate(Gear.Sampled= ifelse(Gear.Sampled = "", "BONGO", Gear.Sampled))
WGOA_wp <- WGOAdata_03 %>% rename (LAT = Latitude.N., LON = Longitude..W.) %>%
mutate(Gear.Sampled = ifelse(Grid.ID %in% c("DH","Kodiak"), "Port", Grid.ID)) %>%
mutate(Gear.Sampled = ifelse(grepl("FOX", Grid.ID), "LINE8", Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Grid.ID %in% c("gv161","gx161","gz161",
"hb161","hd161","hf161"), "BONGO,CTD", Gear.Sampled )) %>%
mutate(Gear.Sampled= ifelse(Gear.Sampled == "", "BONGO", Gear.Sampled))
View(WGOA_wp)
WGOA_wp <- WGOAdata_03 %>% rename (LAT = Latitude.N., LON = Longitude..W.) %>%
mutate(Gear.Sampled = ifelse(Grid.ID %in% c("DH","Kodiak"), "Port", Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(grepl("FOX", Grid.ID), "LINE8", Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Grid.ID %in% c("gv161","gx161","gz161",
"hb161","hd161","hf161"), "BONGO,CTD", Gear.Sampled )) %>%
mutate(Gear.Sampled= ifelse(Gear.Sampled == "", "BONGO", Gear.Sampled))
View(WGOA_wp)
WGOA_wp <- WGOAdata_03 %>% rename (LAT = Latitude.N., LON = Longitude..W.) %>%
mutate(Gear.Sampled = "") %>%
mutate(Gear.Sampled = ifelse(Grid.ID %in% c("DH","Kodiak"), "Port", Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(grepl("FOX", Grid.ID), "LINE8", Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Grid.ID %in% c("gv161","gx161","gz161",
"hb161","hd161","hf161"), "BONGO,CTD", Gear.Sampled )) %>%
mutate(Gear.Sampled= ifelse(Gear.Sampled == "", "BONGO", Gear.Sampled))
View(WGOA_wp)
write.csv(WGOA_wp, file = here("Data","For Dyson","2025-03-07 DY25-06 Project Instructions Waypoints.csv"))
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+
# add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-100),linewidth=c(0.5),colour="darkgrey")+
# add 200m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.2),colour="black")+
geom_sf(data = world) + coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAdata_03, mapping = aes(Longitude..W., Latitude.N.), #, shape = Gear.Sampled
size = 1, show.legend = FALSE) +
# geom_text(data = WGOAdata_02,
#           aes(x = Longitude..W., y = Latitude.N.,label = Grid.ID, vjust = -0.08, size = 1)) +
scale_shape_discrete()+
labs(title = "DY25-06: EcoFOCI Spring Ichthyoplankton Survey") +
theme_bw()+ xlab("Longitude")+ ylab("Latitude")+
theme(axis.title = element_text(size = 20) ,
axis.text.x=element_text(size=15, color = "black"),
axis.text.y = element_text(size=15, color = "black"),
legend.position = "none") +
annotate("text", x=-163,y=57.4912, label = "Bering Sea", size = 12)+
annotate("text", x=-153.495,y=57.4912,size = 8, label = "Kodiak Is.")+
annotate("text", x=-157.5,y=59.7, label = "Alaska",
size = 15, fontface = "bold")
GOARegion_Map_New
ggsave("2025-03-07 DY25-06 Map for Survey Brief.png",path = here("Docs"), height = 8.5, width = 11, units = "in")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("tidyr",  "dplyr","lubridate","hms", "ggplot2", "ggmap", "lattice", "stringr", "data.table",
"tibble","readxl", "sf","maps", "mapdata", "mapplots", "mapview", "marmap", "Cairo", "ncdf4",
"oce", "here","reshape2", "viridis", "export", "rnaturalearth", "kableExtra",
"rnaturalearthdata", "forcats","sf", "geosphere")
ipak(packages)
# Create Base Layer Maps will all numbered stations labeled, with a more focused region (not whole WGOA)
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
WGOAdata <- read.csv(here("Data","2025","2025-03-07 DY2506 PI Waypoints & Gear.csv"))
here()
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("tidyr",  "dplyr","lubridate","hms", "ggplot2", "ggmap", "lattice", "stringr", "data.table",
"tibble","readxl", "sf","maps", "mapdata", "mapplots", "mapview", "marmap", "Cairo", "ncdf4",
"oce", "here","reshape2", "viridis", "export", "rnaturalearth", "kableExtra",
"rnaturalearthdata", "forcats","sf", "geosphere")
ipak(packages)
# Create Base Layer Maps will all numbered stations labeled, with a more focused region (not whole WGOA)
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
WGOAdata <- read.csv(here("Data","2025","2025-03-07 DY25-06 PI Waypoints & Gear.csv"))
View(WGOAdata)
View(WGOAdata)
glimpse(WGOAdata)
WGOAdata$Station <- seq(0, nrow(WGOAdata) - 1)
View(WGOAdata)
WGOAdata <- WGOAdata[,-1]
View(WGOAdata)
AllSta<- c(0:238)
#Stations Left to Sample
# Completed Stations
CompleteScenL <- length(c()) #Fill in with completed StaTDL stations
# Staions Remaining
StaTDL<-c(0:238)
### Cutting stations for time
#STA.0516 <- c(157:159,166,168,170,172,174,176,178:180)
#STA.0520 <- c(167:177) # All Shelikof Stations Cut
#B_Drop_Vec <- c(STA.0516,STA.0517)
#Drop Stations by subset using updated above vector, keep drops by date
#WGOAdata <- WGOAdata %>% subset(!(Station %in% STA.0516))
# Save CSV of above for Day to Day
#write.csv(WGOAdata, here("Data","DY23-07_Day2Day.csv"))
# Reverse Order Stations for Reference (DO NOT DELETE)
#
#            c(1:9,24:28,59:53,84:77, 92:85, 100:93, 107:101,113:108,119:114,
#           125:120, 131:126, 136:132,141:137, 142:142,152:148, 156:153, 159:157,165:160,
#           166:179,180,213:208,216:220,228:225,234:238,271)
ScenName <- "Stations Completed"
Scenario<-StaTDL # Always Change to Updated Stations Remaining
FinalSta<-data.frame("Station"=Scenario,"Stn_Order"= (CompleteScenL+1):(CompleteScenL+length(Scenario)))
# 1. Station Selection Through Scenario (above)
Sta <- WGOAdata %>% left_join(.,FinalSta) %>%
filter(Station %in% FinalSta$Station) %>%
arrange(Stn_Order)
# 2. Choose Departure Date
#DH_SIP <- ymd_hm("2023-05-15 12:00")
#depart <- DH_SIP + dhours(9) # pre-survey calculations, takes ~8 hours to get to STA 1 from DH
# Use below during survey
depart <- lubridate::now(tzone = "America/Anchorage") + dhours(16.5) # Alaska time, for at sea calculations
# 3. Create data.frame that mirrors "Final Station Runtime.xlsx"=
SRTdata <- Sta %>%
mutate(Bongo_hrs = ifelse(Gear.Sampled == "BONGO", 0.33,0)) %>% # BONGO at all stations
mutate(BON_CTD_hrs = ifelse(Gear.Sampled == "BONGO,CTD",0.83,0)) %>%
mutate(BON_CalVET_hrs = ifelse(Gear.Sampled == "BONGO,CALVET", 0.66,0)) %>%
mutate(BON_Cal_CTD_hrs = ifelse(Gear.Sampled == "BONGO,CALVET,CTD",1.16,0)) %>%
#<<<<<<< Updated upstream
mutate(Station_Time = lubridate::dhours(rowSums(across(c(Bongo_hrs,BON_CTD_hrs,BON_CalVET_hrs,BON_Cal_CTD_hrs))))) %>%
mutate(Ship_Speed = 11) %>%  # Ship speed is Variable
mutate(lat_rad = LAT*pi/180) %>% mutate(long_rad = LON*pi/180) %>%
mutate(long_dif = long_rad - shift(long_rad)) %>%
#>>>>>>> Stashed changes
mutate(Dist_NM = ifelse(Station == 0,0,0) ) %>%
mutate(Dist_NM = distGeo(cbind(LON,LAT),cbind(shift(LON),shift(LAT)))/(1000*1.852)) %>%
# distGEO does what code below does in base r
#  mutate(Dist_NM = acos((sin(lag(lat_rad))*sin(lat_rad))+(cos(lag(lat_rad))*cos(lat_rad)*cos(long_dif)))/(pi/180)*60) %>%
mutate(Steam_T = Dist_NM/Ship_Speed) %>%
mutate(Steam_T = lubridate::dhours(Steam_T))
#Write .csv of new Station Order for Oscar Dyson crew
ODsta <- SRTdata %>% select(Grid.ID,LAT,LON,Gear.Sampled,Stn_Order)
View(SRTdata)
x <- SRTdata %>% summarise(Total_Dist = sum(Dist_NM))
View(x)
x <- SRTdata %>% na.omit() %>% summarise(Total_Dist = sum(Dist_NM))
View(x)
