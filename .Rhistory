#<<<<<<< Updated upstream
mutate(Station_Time = lubridate::dhours(rowSums(across(c(Bongo_hrs,BON_CTD_hrs,BON_CalVET_hrs,BON_Cal_CTD_hrs))))) %>% mutate(Ship_Speed = 11) %>% # Ship speed is Variable
mutate(lat_rad = LAT*pi/180) %>% mutate(long_rad = LON*pi/180) %>%
mutate(long_dif = long_rad - shift(long_rad)) %>%
#>>>>>>> Stashed changes
mutate(Dist_NM = ifelse(Station == 0,0,0) ) %>%
mutate(Dist_NM = distGeo(cbind(LON,LAT),cbind(shift(LON),shift(LAT)))/(1000*1.852)) %>% # distGEO does what code below does in base
#  mutate(Dist_NM = acos((sin(lag(lat_rad))*sin(lat_rad))+(cos(lag(lat_rad))*cos(lat_rad)*cos(long_dif)))/(pi/180)*60) %>%
mutate(Steam_T = Dist_NM/Ship_Speed) %>%
mutate(Steam_T = lubridate::dhours(Steam_T))
# 2. rearrange data to calculate time to travel to and complete station operations
shipslog <- SRTdata %>% select(Station, Grid.ID, Station_Time, Steam_T, Stn_Order) %>% # SRTdata will be replaced by filtered stations above
unite("Station",Station:Grid.ID, sep = "_", remove = FALSE) %>%
select(Station,Steam_T,Station_Time,Stn_Order) %>%
gather(key="Ops", Time_Dur, -Station,-Stn_Order) %>% arrange(Station) %>%
separate(Station, c("Station","Grid.ID"), sep = "_") %>%
transform(Station = as.numeric(Station)) %>% arrange(Stn_Order)
shipslog <- na.omit(shipslog)
# 3. Choose Departure Date
depart <- ymd_hm("2023-05-14 12:00")
# 4. Create a table of Station Completion Times
ShipsLog <- shipslog %>% group_by(Stn_Order, Station, Grid.ID) %>%
reframe(Time_Dur = lubridate::dseconds(sum(Time_Dur)))  %>%
mutate(Sta_Time =  depart) %>% mutate(cTime_Dur = cumsum(Time_Dur)) %>%
mutate(Sta_Time = cTime_Dur + Sta_Time) %>% select(Station, Stn_Order, Grid.ID,Sta_Time)
# 5. Plot filtered station map with survey track
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.3), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(LON, LAT, shape = Gear.Sampled), size = 1)+
geom_path(data = SRTdata, mapping = aes(LON, LAT), linewidth = 0.25) +
geom_text(data = SRTdata, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+ ggtitle(paste(ScenName,length(Scenario),"Stns")) +
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
StaMapF
ggsave(paste0(ScenName,".png"),path = here("Docs"), height = 8.5, width = 11, units = "in")
View(SRTdata)
glimpse(SRTdata)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled))
View(WGOA_StaTable)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39|93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO.CALVET",Gear.Sampled))
View(WGOA_StaTable)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled)
View(WGOA_StaTable)
View(WGOA_StaTable)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled))
View(WGOA_StaTable)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled))
View(WGOA_StaTable)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled))
View(WGOA_StaTable)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled)) %>%
mutate(Sta_Pri = ifelse(Station == A,"A",Sta_Pri))
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled)) %>%
mutate(Sta_Pri = ifelse(Station == A,"A","B"))
A <- c(24:28) # experimenting, not real
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled)) %>%
mutate(Sta_Pri = ifelse(Station == A,"A","B"))
View(WGOA_StaTable)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled)) %>%
mutate(Sta_Pri = ifelse(Station = A,"A","B"))
A
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled)) %>%
mutate(Sta_Pri = ifelse(Station == c(24:28),"A","B"))
View(WGOA_StaTable)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled)) %>%
mutate(Sta_Pri = case_when(Station == c(24:28)~"A"))
View(WGOA_StaTable)
library("tibble")
VectorWork <- data.frame(Sta = 1:10)
as.tibble(VectorWork)
as_tibble(VectorWork)
A <- c(1:5)
B <- c(6:10)
VW2 <- VectorWork %>% mutate(Sta_Pri = if_else(Sta == A,"A","B"))
View(VW2)
VW2 <- VectorWork %>% mutate(Sta_Pri = if_else(Sta == A,"A",""))
View(VW2)
A <- c(24:28)
A <- c(77:166,169,171,173,175,177,181,200) # experimenting, not real
C <- c(24,25,68,69,84,60,142,249:269)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled)) %>%
mutate(Sta_Pri = if_else(Station == A,"A","")) %>% mutate(Sta_Pri = if_else(Station == C,"C",""))
View(WGOA_StaTable)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled)) %>%
mutate(Sta_Pri = case_when(Station == A,"A","")) %>% mutate(Sta_Pri = case_when(Station == C,"C",""))
A <- c(77:166,169,171,173,175,177,181,200) # experimenting, not real
C <- c(24,25,68,69,84,60,142,249:269)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled)) %>%
mutate(Sta_Pri = case_when(Station == A,"A",""))
A <- c(77:166,169,171,173,175,177,181,200) # experimenting, not real
C <- c(24,25,68,69,84,60,142,249:269)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled)) %>%
mutate(Sta_Pri = case_when(Station == A,"A",""))
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled)) %>%
mutate(Sta_Pri = if_else(Station %in% A,"A",""))
View(WGOA_StaTable)
# A stations = Priority
A <- c(77:166,169,171,173,175,177,181,200) # experimenting, not real
C <- c(24,25,68,69,84,60,142,249:269)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled)) %>%
mutate(Sta_Pri = if_else(Station %in% A,"A","")) %>%  mutate(Sta_Pri = if_else(Station %in% C,"C",""))
View(WGOA_StaTable)
View(shipslog)
### Create Station & Runtime Dataset, mirroring "Final Station Runtime" Spreadsheets
# Filter out Stations
# LLC = "late larval core" from polygon plot above
#LLCvec <- c(0,60:225,271)
Scen1<-c(0,24:28,44:38,53:59,60:179, 180, 181,201:197,208:213, 216,218,220,228:225,
234:238,239, 245:243,249:251,257:255,261:263, 269:267,271)
ScenName <- "CorePlusCoarseOutside"
Scenario<-Scen1
FinalSta<-data.frame("Station"=Scenario,"Stn_Order"=1:length(Scenario))
# Station Selection Through Omission (Example Below)
# AllSta <- c(0:271) # All Possible Stations
# OmitSta <- c(0,60:225,271) # Stations to leave out
# FinalSta <- setdiff(AllSta,LLCvec) # All stations left
Sta <- WGOAdata %>% left_join(.,FinalSta) %>%
filter(Station %in% FinalSta$Station) %>%
arrange(Stn_Order)
# 1. Create data.frame that mirrors "Final Station Runtime"
SRTdata <- Sta %>% rename(LAT = Latitude.N., LON = Longitude..W.) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "","BONGO")) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "NEU","BONGO")) %>%
mutate(Gear.Sampled =  replace(Gear.Sampled,Gear.Sampled == "NEU, CTD","BONGO,CTD")) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "CTD","BONGO,CTD")) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "CALVET","BONGO,CALVET")) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "CALVET, CTD","BONGO,CALVET,CTD")) %>%
mutate(Bongo_hrs = ifelse(Gear.Sampled == "BONGO", 0.33,0)) %>% # BONGO at all stations
mutate(BON_CTD_hrs = ifelse(Gear.Sampled == "BONGO,CTD",0.83,0)) %>%
mutate(BON_CalVET_hrs = ifelse(Gear.Sampled == "BONGO,CALVET", 0.66,0)) %>%
mutate(BON_Cal_CTD_hrs = ifelse(Gear.Sampled == "BONGO,CALVET,CTD",1.16,0)) %>%
#<<<<<<< Updated upstream
mutate(Station_Time = lubridate::dhours(rowSums(across(c(Bongo_hrs,BON_CTD_hrs,BON_CalVET_hrs,BON_Cal_CTD_hrs))))) %>% mutate(Ship_Speed = 11) %>% # Ship speed is Variable
mutate(lat_rad = LAT*pi/180) %>% mutate(long_rad = LON*pi/180) %>%
mutate(long_dif = long_rad - shift(long_rad)) %>%
#>>>>>>> Stashed changes
mutate(Dist_NM = ifelse(Station == 0,0,0) ) %>%
mutate(Dist_NM = distGeo(cbind(LON,LAT),cbind(shift(LON),shift(LAT)))/(1000*1.852)) %>% # distGEO does what code below does in base
#  mutate(Dist_NM = acos((sin(lag(lat_rad))*sin(lat_rad))+(cos(lag(lat_rad))*cos(lat_rad)*cos(long_dif)))/(pi/180)*60) %>%
mutate(Steam_T = Dist_NM/Ship_Speed) %>%
mutate(Steam_T = lubridate::dhours(Steam_T))
# 2. rearrange data to calculate time to travel to and complete station operations
shipslog <- SRTdata %>% select(Station, Grid.ID,Gear.Sampled, Station_Time, Steam_T, Stn_Order) %>% # SRTdata will be replaced by filtered stations above
unite("Station",Station:Grid.ID, sep = "_", remove = FALSE) %>%
select(Station,Steam_T,Station_Time,Stn_Order) %>%
gather(key="Ops", Time_Dur, -Station,-Stn_Order) %>% arrange(Station) %>%
separate(Station, c("Station","Grid.ID"), sep = "_") %>%
transform(Station = as.numeric(Station)) %>% arrange(Stn_Order)
shipslog <- na.omit(shipslog)
# 3. Choose Departure Date
depart <- ymd_hm("2023-05-14 12:00")
# 4. Create a table of Station Completion Times
ShipsLog <- shipslog %>% group_by(Stn_Order, Station, Grid.ID) %>%
reframe(Time_Dur = lubridate::dseconds(sum(Time_Dur)))  %>%
mutate(Sta_Time =  depart) %>% mutate(cTime_Dur = cumsum(Time_Dur)) %>%
mutate(Sta_Time = cTime_Dur + Sta_Time) %>% select(Station, Stn_Order, Grid.ID,Sta_Time)
# 5. Plot filtered station map with survey track
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.3), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(LON, LAT, shape = Gear.Sampled), size = 1)+
geom_path(data = SRTdata, mapping = aes(LON, LAT), linewidth = 0.25) +
geom_text(data = SRTdata, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+ ggtitle(paste(ScenName,length(Scenario),"Stns")) +
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
#StaMapF
#ggsave(paste0(ScenName,".png"),path = here("Docs"), height = 8.5, width = 11, units = "in")
View(ShipsLog)
View(shipslog)
# Load Station Data Table from DY19-05
WGOAdata <- read.csv(here("Data","WGOA station_list_dougherty_2019_ProjInstrutions.csv"))
### Create Station & Runtime Dataset ############
##All Stations
AllSta<-c(0,24:28,44:38,53:59,60:179, 180, 181,201:197,208:213, 216,218,220,228:225,
234:238,239, 245:243,249:251,257:255,261:263, 269:267,271)
###Stations by Day/Interruptions
## Completed Stations
CompleteScenL <- length(c(24:28,44:38,53:59, 60:71)) #Fill in with completed StaTDL stations
## Stations Remaining
StaTDL<-c(72:78)
ScenName <- "Day Plan" # Best
Scenario<-StaTDL # Always Change to Updated Scen
FinalSta<-data.frame("Station"=Scenario,"Stn_Order"= (CompleteScenL+1):(CompleteScenL+length(Scenario)))
#Stn_Order = cumulative Station order for data entry
# Select Scen Stations (above) from Total Station List
Sta <- WGOAdata %>% left_join(.,FinalSta) %>%
filter(Station %in% FinalSta$Station) %>%
arrange(Stn_Order)
# 2. Choose Departure Date
#depart <- ymd_hm("2023-05-14 12:00")
depart <- lubridate::now(tzone = "America/Adak")
# Variable List below that can Change Time On & Between Stations
# Gear Time : Lines 77 - 80
# Ship Speed: Line 83
# 3. Create data.frame that mirrors "Final Station Runtime"
SRTdata <- Sta %>% rename(LAT = Latitude.N., LON = Longitude..W.) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "","BONGO")) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "NEU","BONGO")) %>%
mutate(Gear.Sampled =  replace(Gear.Sampled,Gear.Sampled == "NEU, CTD","BONGO,CTD")) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "CTD","BONGO,CTD")) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "CALVET","BONGO,CALVET")) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "CALVET, CTD","BONGO,CALVET,CTD")) %>%
mutate(Bongo_hrs = ifelse(Gear.Sampled == "BONGO", 0.33,0)) %>% # BONGO at all stations
mutate(BON_CTD_hrs = ifelse(Gear.Sampled == "BONGO,CTD",0.83,0)) %>%
mutate(BON_CalVET_hrs = ifelse(Gear.Sampled == "BONGO,CALVET", 0.66,0)) %>%
mutate(BON_Cal_CTD_hrs = ifelse(Gear.Sampled == "BONGO,CALVET,CTD",1.16,0)) %>%
#<<<<<<< Updated upstream
mutate(Station_Time = lubridate::dhours(rowSums(across(c(Bongo_hrs,BON_CTD_hrs,BON_CalVET_hrs,BON_Cal_CTD_hrs))))) %>% mutate(Ship_Speed = 11) %>% # Ship speed is Variable
mutate(lat_rad = LAT*pi/180) %>% mutate(long_rad = LON*pi/180) %>%
mutate(long_dif = long_rad - shift(long_rad)) %>%
#>>>>>>> Stashed changes
mutate(Dist_NM = ifelse(Station == 0,0,0) ) %>%
mutate(Dist_NM = distGeo(cbind(LON,LAT),cbind(shift(LON),shift(LAT)))/(1000*1.852)) %>% # distGEO does what code below does in base
#  mutate(Dist_NM = acos((sin(lag(lat_rad))*sin(lat_rad))+(cos(lag(lat_rad))*cos(lat_rad)*cos(long_dif)))/(pi/180)*60) %>%
mutate(Steam_T = Dist_NM/Ship_Speed) %>%
mutate(Steam_T = lubridate::dhours(Steam_T))
# 4. rearrange data to calculate time to travel to and complete station operations
shipslog <- SRTdata %>% select(Station, Grid.ID, Station_Time, Steam_T, Stn_Order) %>% # SRTdata will be replaced by filtered stations above
unite("Station",Station:Grid.ID, sep = "_", remove = FALSE) %>%
select(Station,Steam_T,Station_Time,Stn_Order) %>%
gather(key="Ops", Time_Dur, -Station,-Stn_Order) %>% arrange(Station) %>%
separate(Station, c("Station","Grid.ID"), sep = "_") %>%
transform(Station = as.numeric(Station)) %>% arrange(Stn_Order)
shipslog <- na.omit(shipslog)
# 4. Create a table of Station Completion Times
ShipsLog <- shipslog %>% group_by(Stn_Order, Station, Grid.ID) %>%
reframe(Time_Dur = lubridate::dseconds(sum(Time_Dur)))  %>%
mutate(Sta_Time =  depart) %>% mutate(cTime_Dur = cumsum(Time_Dur)) %>%
mutate(Sta_Time = cTime_Dur + Sta_Time) %>% select(Stn_Order, Grid.ID,Sta_Time) %>%
rename("Station"="Stn_Order","Grid Station"="Grid.ID","Est.Station Time"="Sta_Time")
# Output Station Table, include: Ships Log
kbl(ShipsLog, caption = "Next Stations", booktabs = T) %>%
kableExtra::kable_styling(bootstrap_options = "bordered", latex_options = c("striped", "HOLD_position"))
Sta_GearSamp <- WGOAdata %>% select(Station,Grid.ID,Gear.Sampled) %>%
filter(Station %in% FinalSta$Station)
View(Sta_GearSamp)
Sta_GearSamp <- SRTdata %>% select(Station,Grid.ID,Gear.Sampled) %>%
filter(Station %in% FinalSta$Station)
View(Sta_GearSamp)
ShipsLog <- ShipsLog %>% left_join(.,Sta_GearSamp)
View(ShipsLog)
ShipsLog <- left_join(ShipsLog,Sta_GearSamp, by = "Grid.ID")
View(ShipsLog)
ShipsLog <- shipslog %>% group_by(Stn_Order, Station, Grid.ID) %>%
reframe(Time_Dur = lubridate::dseconds(sum(Time_Dur)))  %>%
mutate(Sta_Time =  depart) %>% mutate(cTime_Dur = cumsum(Time_Dur)) %>%
mutate(Sta_Time = cTime_Dur + Sta_Time) %>% select(Stn_Order, Grid.ID,Sta_Time) %>%
rename("Station"="Stn_Order","Grid Station"="Grid.ID","Est.Station Time"="Sta_Time")
ShipsLog <- left_join(ShipsLog,Sta_GearSamp, by = 'Grid.ID')
ShipsLog <- shipslog %>% group_by(Stn_Order, Station, Grid.ID) %>%
reframe(Time_Dur = lubridate::dseconds(sum(Time_Dur)))  %>%
mutate(Sta_Time =  depart) %>% mutate(cTime_Dur = cumsum(Time_Dur)) %>%
mutate(Sta_Time = cTime_Dur + Sta_Time) %>% select(Stn_Order, Grid.ID,Sta_Time) %>%
rename("Station"="Stn_Order","Grid Station"="Grid.ID","Est.Station Time"="Sta_Time")
#6. Create a table to link Gear.Sampled for daily stations in ShipsLog to know Operations at each station
Sta_GearSamp <- SRTdata %>% select(Station,Grid.ID,Gear.Sampled) %>%
filter(Station %in% FinalSta$Station)
ShipsLog <- left_join(ShipsLog,Sta_GearSamp, by = "Grid.ID")
ShipsLog <- shipslog %>% group_by(Stn_Order, Station, Grid.ID) %>%
reframe(Time_Dur = lubridate::dseconds(sum(Time_Dur)))  %>%
mutate(Sta_Time =  depart) %>% mutate(cTime_Dur = cumsum(Time_Dur)) %>%
mutate(Sta_Time = cTime_Dur + Sta_Time) %>% select(Stn_Order, Grid.ID,Sta_Time) %>%
rename("Station"="Stn_Order","Grid Station"="Grid.ID","Est.Station Time"="Sta_Time")
#6. Create a table to link Gear.Sampled for daily stations in ShipsLog to know Operations at each station
Sta_GearSamp <- SRTdata %>% select(Station,Grid.ID,Gear.Sampled) %>%
filter(Station %in% FinalSta$Station) %>% select(Grid.ID,Gear.Sampled) %>%
rename("Grid Station"="Grid.ID")
ShipsLog <- left_join(ShipsLog,Sta_GearSamp, by = "Grid Station")
View(ShipsLog)
A <- c(77:166,169,171,173,175,177,181,200) # experimenting, not real
B <- c(1:10) # fill in
C <- c(24,25,68,69,84,60,142,249:269)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled)) %>%
mutate(Sta_Pri = if_else(Station %in% A,"A","")) %>%  mutate(Sta_Pri = if_else(Station %in% C,"C",""))
View(WGOA_StaTable)
AllSTA <- c(0:271)
Scenario<-AllSTA
FinalSta<-data.frame("Station"=Scenario,"Stn_Order"=1:length(Scenario))
# Station Selection Through Omission (Example Below)
# AllSta <- c(0:271) # All Possible Stations
# OmitSta <- c(0,60:225,271) # Stations to leave out
# FinalSta <- setdiff(AllSta,LLCvec) # All stations left
Sta <- WGOAdata %>% left_join(.,FinalSta) %>%
filter(Station %in% FinalSta$Station) %>%
arrange(Stn_Order)
SRTdata <- Sta %>% rename(LAT = Latitude.N., LON = Longitude..W.) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "","BONGO")) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "NEU","BONGO")) %>%
mutate(Gear.Sampled =  replace(Gear.Sampled,Gear.Sampled == "NEU, CTD","BONGO,CTD")) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "CTD","BONGO,CTD")) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "CALVET","BONGO,CALVET")) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "CALVET, CTD","BONGO,CALVET,CTD")) %>%
mutate(Bongo_hrs = ifelse(Gear.Sampled == "BONGO", 0.33,0)) %>% # BONGO at all stations
mutate(BON_CTD_hrs = ifelse(Gear.Sampled == "BONGO,CTD",0.83,0)) %>%
mutate(BON_CalVET_hrs = ifelse(Gear.Sampled == "BONGO,CALVET", 0.66,0)) %>%
mutate(BON_Cal_CTD_hrs = ifelse(Gear.Sampled == "BONGO,CALVET,CTD",1.16,0)) %>%
#<<<<<<< Updated upstream
mutate(Station_Time = lubridate::dhours(rowSums(across(c(Bongo_hrs,BON_CTD_hrs,BON_CalVET_hrs,BON_Cal_CTD_hrs))))) %>% mutate(Ship_Speed = 11) %>% # Ship speed is Variable
mutate(lat_rad = LAT*pi/180) %>% mutate(long_rad = LON*pi/180) %>%
mutate(long_dif = long_rad - shift(long_rad)) %>%
#>>>>>>> Stashed changes
mutate(Dist_NM = ifelse(Station == 0,0,0) ) %>%
mutate(Dist_NM = distGeo(cbind(LON,LAT),cbind(shift(LON),shift(LAT)))/(1000*1.852)) %>% # distGEO does what code below does in base
#  mutate(Dist_NM = acos((sin(lag(lat_rad))*sin(lat_rad))+(cos(lag(lat_rad))*cos(lat_rad)*cos(long_dif)))/(pi/180)*60) %>%
mutate(Steam_T = Dist_NM/Ship_Speed) %>%
mutate(Steam_T = lubridate::dhours(Steam_T))
# 2. rearrange data to calculate time to travel to and complete station operations
shipslog <- SRTdata %>% select(Station, Grid.ID,Station_Time, Steam_T, Stn_Order) %>% # SRTdata will be replaced by filtered stations above
unite("Station",Station:Grid.ID, sep = "_", remove = FALSE) %>%
select(Station,Steam_T,Station_Time,Stn_Order) %>%
gather(key="Ops", Time_Dur, -Station,-Stn_Order) %>% arrange(Station) %>%
separate(Station, c("Station","Grid.ID"), sep = "_") %>%
transform(Station = as.numeric(Station)) %>% arrange(Stn_Order)
shipslog <- na.omit(shipslog)
# 3. Choose Departure Date
depart <- ymd_hm("2023-05-14 12:00")
# 4. Create a table of Station Completion Times
ShipsLog <- shipslog %>% group_by(Stn_Order, Station, Grid.ID) %>%
reframe(Time_Dur = lubridate::dseconds(sum(Time_Dur)))  %>%
mutate(Sta_Time =  depart) %>% mutate(cTime_Dur = cumsum(Time_Dur)) %>%
mutate(Sta_Time = cTime_Dur + Sta_Time) %>% select(Station, Stn_Order, Grid.ID,Sta_Time)
A <- c(77:166,169,171,173,175,177,181,200) # experimenting, not real
B <- c(1:10) # fill in
C <- c(24,25,68,69,84,60,142,249:269)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled)) %>%
mutate(Sta_Pri = if_else(Station %in% A,"A","")) %>%  mutate(Sta_Pri = if_else(Station %in% C,"C",""))
View(WGOA_StaTable)
?else_if
A <- c(77:166,169,171,173,175,177,181,200) # experimenting, not real
B <- c(1:10) # fill in
C <- c(24,25,68,69,84,60,142,249:269)
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled)) %>%
mutate(Sta_Pri = if(Station %in% A) {"A"} else if (Station %in% B) {"B"} else if
(Station %in% C) {"C"} else {""})
WGOA_StaTable <- SRTdata %>% select(Station, Grid.ID,LAT,LON,Gear.Sampled) %>%
mutate(Gear.Sampled = ifelse(Station == 39,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 93,"BONGO",Gear.Sampled)) %>%
mutate(Gear.Sampled = ifelse(Station == 119,"BONGO,CALVET",Gear.Sampled)) %>%
mutate(Sta_Pri = if_else(Station %in% A,"A",if_else(Station %in% B,"B","C")))
View(WGOA_StaTable)
WGOA_StaTable$LON <- WGOA_StaTable$LON*-1
# get bathymetry data
b = getNOAA.bathy(lon1 = min(WGOA_StaTable$LON)+-1, lon2 = max(WGOA_StaTable$LON)+1,
lat1 = min(WGOA_StaTable$LAT)+-1, lat2 = max(WGOA_StaTable$LAT)+1,
resolution = 15)
# convert bathymetry to data frame
bf = fortify.bathy(b)
# set map limits, whole region
lons = c(min(WGOA_StaTable$LON)+-1, max(WGOA_StaTable$LON)+1) #-140 = large map
lats = c(min(WGOA_StaTable$LAT)+-1,max(WGOA_StaTable$LAT)+1) # 52 = large map
# Create Color Vector: stoplight
stpliteCol <- c("green","yellow","red")
# Plot filtered station map with survey track
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.3), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = WGOA_StaTable, mapping = aes(LON, LAT, shape = Gear.Sampled, color= Sta_Pri), size = 1)+
geom_path(data = WGOA_StaTable, mapping = aes(LON, LAT), linewidth = 0.25) +
geom_text(data = WGOA_StaTable, mapping = aes(LON, LAT, label = Stn_Order ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
scale_color_manual(values = stpliteCol)+
ggtitle(paste(ScenName,length(Scenario),"Stations")) +
theme(axis.text.x=element_text(size=8,hjust = 1,vjust = 1, angle = 45, color = "black"), axis.text.y = element_text(size=8, color = "black"))
StaMapF
View(WGOA_StaTable)
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.3), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = WGOA_StaTable, mapping = aes(LON, LAT, shape = Gear.Sampled, color= Sta_Pri), size = 1)+
geom_path(data = WGOA_StaTable, mapping = aes(LON, LAT), linewidth = 0.25) +
geom_text(data = WGOA_StaTable, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
scale_color_manual(values = stpliteCol)+
ggtitle(paste(ScenName,length(Scenario),"Stations")) +
theme(axis.text.x=element_text(size=8,hjust = 1,vjust = 1, angle = 45, color = "black"), axis.text.y = element_text(size=8, color = "black"))
StaMapF
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.3), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = WGOA_StaTable, mapping = aes(LON, LAT, shape = Gear.Sampled, color= Sta_Pri), size = 1)+
#geom_path(data = WGOA_StaTable, mapping = aes(LON, LAT), linewidth = 0.25) +
geom_text(data = WGOA_StaTable, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
scale_color_manual(values = stpliteCol)+
ggtitle(paste(ScenName,length(Scenario),"Stations")) +
theme(axis.text.x=element_text(size=8,hjust = 1,vjust = 1, angle = 45, color = "black"), axis.text.y = element_text(size=8, color = "black"))
StaMapF
stpliteCol <- c("green","orange","red")
# Plot filtered station map with survey track
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.3), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = WGOA_StaTable, mapping = aes(LON, LAT, shape = Gear.Sampled, color= Sta_Pri), size = 1)+
#geom_path(data = WGOA_StaTable, mapping = aes(LON, LAT), linewidth = 0.25) +
geom_text(data = WGOA_StaTable, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
scale_color_manual(values = stpliteCol)+
ggtitle(paste(ScenName,length(Scenario),"Stations")) +
theme(axis.text.x=element_text(size=8,hjust = 1,vjust = 1, angle = 45, color = "black"), axis.text.y = element_text(size=8, color = "black"))
StaMapF
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.3), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = WGOA_StaTable, mapping = aes(LON, LAT, shape = Gear.Sampled, color= Sta_Pri), size = 3)+
#geom_path(data = WGOA_StaTable, mapping = aes(LON, LAT), linewidth = 0.25) +
geom_text(data = WGOA_StaTable, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 3)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
scale_color_manual(values = stpliteCol)+
ggtitle(paste(ScenName,length(Scenario),"Stations")) +
theme(axis.text.x=element_text(size=8,hjust = 1,vjust = 1, angle = 45, color = "black"), axis.text.y = element_text(size=8, color = "black"))
StaMapF
View(WGOA_StaTable)
ScenName <- "All Possible Stations by Priority"
StaMapF
ggsave(paste0(ScenName,".png"),path = here("Docs"), height = 8.5, width = 11, units = "in")
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.3), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = WGOA_StaTable, mapping = aes(LON, LAT, shape = Gear.Sampled, color= Sta_Pri), size = 3)+
#geom_path(data = WGOA_StaTable, mapping = aes(LON, LAT), linewidth = 0.25) +
geom_text(data = WGOA_StaTable, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 3)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
scale_color_manual(values = stpliteCol)+
ggtitle(paste(ScenName,length(Scenario),"Stations")) +
theme(axis.text.x=element_text(size=8,hjust = 1,vjust = 1, angle = 45, color = "black"), axis.text.y = element_text(size=8, color = "black"))
StaMapF
ggsave(paste0(ScenName,".png"),path = here("Docs"), height = 8.5, width = 11, units = "in")
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.3), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = WGOA_StaTable, mapping = aes(LON, LAT, shape = Gear.Sampled, color= Sta_Pri), size = 2)+
#geom_path(data = WGOA_StaTable, mapping = aes(LON, LAT), linewidth = 0.25) +
geom_text(data = WGOA_StaTable, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
scale_color_manual(values = stpliteCol)+
ggtitle(paste(ScenName,length(Scenario),"Stations")) +
theme(axis.text.x=element_text(size=8,hjust = 1,vjust = 1, angle = 45, color = "black"), axis.text.y = element_text(size=8, color = "black"))
StaMapF
ggsave(paste0(ScenName,".png"),path = here("Docs"), height = 8.5, width = 11, units = "in")
