## Querying NOAA database ...
## This may take seconds to minutes, depending on grid size
## Building bathy matrix ...
# convert bathymetry to data frame
bf = fortify.bathy(b)
# get regional polygons
reg = map_data("world2Hires")
reg = subset(reg, region %in% c('USSR', 'USA'))
# convert lat longs
reg$long = (360 - reg$long)*-1
# set map limits, whole region
lons = c(-165, -146) #-140 = large map
lats = c(51.5, 62) # 52 = large map
######################################
# make plot
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-50),
linewidth=c(0.5),
colour="light grey")+
# add 100m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-100),
linewidth=c(0.5),
colour="darkgrey")+
# add 200m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-200),
linewidth=c(0.5),
colour="black")+
# add coastline
geom_sf(data = world)+
coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAdata, mapping = aes(LON, LAT), size = 1)+
geom_text(data = WGOAdata, mapping = aes(LON, LAT, label = GRID.STA ),
nudge_y = -0.05, size = 2.5)+
# formatting
scale_shape_discrete()+
theme_bw()+
xlab("Longitude")+
ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
GOARegion_Map_New
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("tidyr",  "dplyr", "ggplot2", "ggmap", "lattice", "stringr",
"tibble","readxl", "sf","maps", "mapdata", "mapplots", "mapview", "marmap", "Cairo", "ncdf4",
"oce", "here","reshape2", "viridis", "export", "rnaturalearth",
"rnaturalearthdata")
ipak(packages)
install.packages(c("automap", "car", "cli", "covr", "dplyr", "ellipse", "FactoMineR", "flextable", "gam", "gdtools", "ggplot2", "googlesheets4", "gtable", "hardhat", "htmltools", "interp", "marmap", "officer", "parallelly", "prodlim", "ps", "RCurl", "rgl", "rlang", "rmarkdown", "robustbase", "RSQLite", "segmented", "tibble", "trend", "vctrs", "xfun"))
install.packages(c("automap", "car", "cli", "covr", "dplyr", "ellipse", "FactoMineR", "flextable", "gam", "gdtools", "ggplot2", "googlesheets4", "gtable", "hardhat", "htmltools", "interp", "marmap", "officer", "parallelly", "prodlim", "ps", "RCurl", "rgl", "rlang", "rmarkdown", "robustbase", "RSQLite", "segmented", "tibble", "trend", "vctrs", "xfun"))
install.packages(c("automap", "car", "cli", "covr", "dplyr", "ellipse", "FactoMineR", "flextable", "gam", "gdtools", "ggplot2", "googlesheets4", "gtable", "hardhat", "htmltools", "interp", "marmap", "officer", "parallelly", "prodlim", "ps", "RCurl", "rgl", "rlang", "rmarkdown", "robustbase", "RSQLite", "segmented", "tibble", "trend", "vctrs", "xfun"))
install.packages(c("automap", "car", "cli", "covr", "dplyr", "ellipse", "FactoMineR", "flextable", "gam", "gdtools", "ggplot2", "googlesheets4", "gtable", "hardhat", "htmltools", "interp", "marmap", "officer", "parallelly", "prodlim", "ps", "RCurl", "rgl", "rlang", "rmarkdown", "robustbase", "RSQLite", "segmented", "tibble", "trend", "vctrs", "xfun"))
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("tidyr",  "dplyr", "ggplot2", "ggmap", "lattice", "stringr",
"tibble","readxl", "sf","maps", "mapdata", "mapplots", "mapview", "marmap", "Cairo", "ncdf4",
"oce", "here","reshape2", "viridis", "export", "rnaturalearth",
"rnaturalearthdata")
ipak(packages)
install.packages(c("cli", "dplyr", "ggplot2", "htmltools", "rlang", "tibble", "vctrs"))
install.packages(c("cli", "dplyr", "ggplot2", "htmltools", "rlang", "tibble", "vctrs"))
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("tidyr",  "dplyr", "ggplot2", "ggmap", "lattice", "stringr",
"tibble","readxl", "sf","maps", "mapdata", "mapplots", "mapview", "marmap", "Cairo", "ncdf4",
"oce", "here","reshape2", "viridis", "export", "rnaturalearth",
"rnaturalearthdata")
ipak(packages)
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("tidyr",  "dplyr", "ggplot2", "ggmap", "lattice", "stringr",
"tibble","readxl", "sf","maps", "mapdata", "mapplots", "mapview", "marmap", "Cairo", "ncdf4",
"oce", "here","reshape2", "viridis", "export", "rnaturalearth",
"rnaturalearthdata")
ipak(packages)
WGOAMaster <- read.csv(here("Data","EcoFOCI_GOAIERP_GEARspreadsheet.csv")) #GOA-IERP Stations
WGOAMaster <- WGOAMaster %>% arrange(y) %>% mutate(St_Ord = 1:length(GRID.STA))
View(WGOAMaster)
WGOAMaster <- read.csv(here("Data","EcoFOCI_GOAIERP_GEARspreadsheet.csv")) #GOA-IERP Stations
WGOAMaster <- WGOAMaster %>% arrange(y) %>% mutate(St_Ord = 1:length(GRID.STA))
WGOAMaster$LON <- WGOAMaster$LON*-1
# get bathymetry data
b = getNOAA.bathy(lon1 = -165, lon2 = -146, lat1 = 51.5, lat2 = 62,
resolution = 15)
## Querying NOAA database ...
## This may take seconds to minutes, depending on grid size
## Building bathy matrix ...
# convert bathymetry to data frame
bf = fortify.bathy(b)
# get regional polygons
reg = map_data("world2Hires")
reg = subset(reg, region %in% c('USSR', 'USA'))
# convert lat longs
reg$long = (360 - reg$long)*-1
# set map limits, whole region
lons = c(-165, -146) #-140 = large map
lats = c(51.5, 62) # 52 = large map
######################################
# make plot
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-50),
linewidth=c(0.5),
colour="light grey")+
# add 100m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-100),
linewidth=c(0.5),
colour="darkgrey")+
# add 200m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-200),
linewidth=c(0.5),
colour="black")+
# add coastline
geom_sf(data = world)+
coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAMaster, mapping = aes(LON, LAT), size = 1)+
geom_text(data = WGOAMaster, mapping = aes(LON, LAT, label = St_Ord ),
nudge_y = -0.05, size = 2.5)+
# formatting
scale_shape_discrete()+
theme_bw()+
xlab("Longitude")+
ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
GOARegion_Map_New
WGOAMaster$LON <- WGOAMaster$LON*-1
# get bathymetry data
b = getNOAA.bathy(lon1 = -165.5, lon2 = -145, lat1 = 51.5, lat2 = 62,
resolution = 15)
## Querying NOAA database ...
## This may take seconds to minutes, depending on grid size
## Building bathy matrix ...
# convert bathymetry to data frame
bf = fortify.bathy(b)
# get regional polygons
reg = map_data("world2Hires")
reg = subset(reg, region %in% c('USSR', 'USA'))
# convert lat longs
reg$long = (360 - reg$long)*-1
# set map limits, whole region
lons = c(-165.5, -145) #-140 = large map
lats = c(51.5, 62) # 52 = large map
######################################
# make plot
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-50),
linewidth=c(0.5),
colour="light grey")+
# add 100m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-100),
linewidth=c(0.5),
colour="darkgrey")+
# add 200m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-200),
linewidth=c(0.5),
colour="black")+
# add coastline
geom_sf(data = world)+
coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAMaster, mapping = aes(LON, LAT), size = 1)+
geom_text(data = WGOAMaster, mapping = aes(LON, LAT, label = St_Ord ),
nudge_y = -0.05, size = 2.5)+
# formatting
scale_shape_discrete()+
theme_bw()+
xlab("Longitude")+
ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
GOARegion_Map_New
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-50),
linewidth=c(0.5),
colour="light grey")+
# add 100m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-100),
linewidth=c(0.5),
colour="darkgrey")+
# add 200m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-200),
linewidth=c(0.5),
colour="black")+
# add coastline
geom_sf(data = world)+
coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAMaster, mapping = aes(LON, LAT), size = 1)+
geom_text(data = WGOAMaster, mapping = aes(LON, LAT, label = St_Ord ),
nudge_y = -0.05, size = 2.5)+
# formatting
scale_shape_discrete()+
theme_bw()+
xlab("Longitude")+
ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
GOARegion_Map_New
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("tidyr",  "dplyr", "ggplot2", "ggmap", "lattice", "stringr",
"tibble","readxl", "sf","maps", "mapdata", "mapplots", "mapview", "marmap", "Cairo", "ncdf4",
"oce", "here","reshape2", "viridis", "export", "rnaturalearth",
"rnaturalearthdata")
ipak(packages)
glimpse(reg)
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-50),
linewidth=c(0.5),
colour="light grey")+
# add 100m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-100),
linewidth=c(0.5),
colour="darkgrey")+
# add 200m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-200),
linewidth=c(0.5),
colour="black")+
# add coastline
geom_sf(data = world)+
coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAMaster, mapping = aes(LON, LAT), size = 1)+
geom_text(data = WGOAMaster, mapping = aes(LON, LAT, label = St_Ord ),
nudge_y = -0.05, size = 2.5)+
# formatting
scale_shape_discrete()+
theme_bw()+
xlab("Longitude")+
ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
GOARegion_Map_New
WGOAdatA <- read.csv(here("Data","WGOA station_list_dougherty_2019_ProjInstrutions.csv"))
WGOAdata <- read.csv(here("Data","WGOA station_list_dougherty_2019_ProjInstrutions.csv"))
WGOAdata$LON <- WGOAdata$LON*-1
WGOAdata <- read.csv(here("Data","WGOA station_list_dougherty_2019_ProjInstrutions.csv"))
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("tidyr",  "dplyr", "ggplot2", "ggmap", "lattice", "stringr",
"tibble","readxl", "sf","maps", "mapdata", "mapplots", "mapview", "marmap", "Cairo", "ncdf4",
"oce", "here","reshape2", "viridis", "export", "rnaturalearth",
"rnaturalearthdata")
ipak(packages)
WGOAdata$LON <- WGOAdata$LON*-1
# get bathymetry data
b = getNOAA.bathy(lon1 = -165, lon2 = -146, lat1 = 51.5, lat2 = 62,
resolution = 15)
## Querying NOAA database ...
## This may take seconds to minutes, depending on grid size
## Building bathy matrix ...
# convert bathymetry to data frame
bf = fortify.bathy(b)
# get regional polygons
reg = map_data("world2Hires")
reg = subset(reg, region %in% c('USSR', 'USA'))
# convert lat longs
reg$long = (360 - reg$long)*-1
# set map limits, whole region
lons = c(-165, -146) #-140 = large map
lats = c(51.5, 62) # 52 = large map
######################################
# make plot
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-50),
linewidth=c(0.5),
colour="light grey")+
# add 100m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-100),
linewidth=c(0.5),
colour="darkgrey")+
# add 200m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-200),
linewidth=c(0.5),
colour="black")+
# add coastline
geom_sf(data = world)+
coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAdata, mapping = aes(LON, LAT), size = 1)+
geom_text(data = WGOAdata, mapping = aes(LON, LAT, label = GRID.STA ),
nudge_y = -0.05, size = 2.5)+
# formatting
scale_shape_discrete()+
theme_bw()+
xlab("Longitude")+
ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
GOARegion_Map_New
View(WGOAMaster)
View(WGOAdata)
WGOAdata <- read.csv(here("Data","WGOA station_list_dougherty_2019_ProjInstrutions.csv"))
View(WGOAdata)
WGOAMaster$LON <- WGOAMaster$LON*-1
# get bathymetry data
b = getNOAA.bathy(lon1 = -165.5, lon2 = -145, lat1 = 51.5, lat2 = 62,
resolution = 15)
## Querying NOAA database ...
## This may take seconds to minutes, depending on grid size
## Building bathy matrix ...
# convert bathymetry to data frame
bf = fortify.bathy(b)
# get regional polygons
reg = map_data("world2Hires")
reg = subset(reg, region %in% c('USSR', 'USA'))
# convert lat longs
reg$long = (360 - reg$long)*-1
# set map limits, whole region
lons = c(-165.5, -145)
lats = c(51.5, 62)
View(WGOAMaster)
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-50),
linewidth=c(0.5),
colour="light grey")+
# add 100m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-100),
linewidth=c(0.5),
colour="darkgrey")+
# add 200m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-200),
linewidth=c(0.5),
colour="black")+
# add coastline
geom_sf(data = world)+
coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAMaster, mapping = aes(LON, LAT), size = 1)
GOARegion_Map_New
View(WGOAMaster)
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-50),
linewidth=c(0.5),
colour="light grey")+
# add 100m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-100),
linewidth=c(0.5),
colour="darkgrey")+
# add 200m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-200),
linewidth=c(0.5),
colour="black")+
# add coastline
geom_sf(data = world)+
coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAMaster, mapping = aes(LON, LAT), size = 1)+
geom_text(data = WGOAMaster, mapping = aes(LON, LAT, label = St_Ord ),
nudge_y = -0.05, size = 2.5)
GOARegion_Map_New
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-50),
linewidth=c(0.5),
colour="light grey")+
# add 100m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-100),
linewidth=c(0.5),
colour="darkgrey")+
# add 200m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-200),
linewidth=c(0.5),
colour="black")+
# add coastline
geom_sf(data = world)+
coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAMaster, mapping = aes(LON, LAT), size = 1)+
geom_text(data = WGOAMaster, mapping = aes(LON, LAT, label = St_Ord ),
nudge_y = -0.05, size = 2.5)+
# formatting
scale_shape_discrete()+
theme_bw()+
xlab("Longitude")+
ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
GOARegion_Map_New
# get bathymetry data
b = getNOAA.bathy(lon1 = -165.5, lon2 = -144.5, lat1 = 51.5, lat2 = 62,
resolution = 15)
## Querying NOAA database ...
## This may take seconds to minutes, depending on grid size
## Building bathy matrix ...
# convert bathymetry to data frame
bf = fortify.bathy(b)
# get regional polygons
reg = map_data("world2Hires")
reg = subset(reg, region %in% c('USSR', 'USA'))
# convert lat longs
reg$long = (360 - reg$long)*-1
# set map limits, whole region
lons = c(-165.5, -144.5)
lats = c(51.5, 62)
######################################
# make plot
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-50),
linewidth=c(0.5),
colour="light grey")+
# add 100m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-100),
linewidth=c(0.5),
colour="darkgrey")+
# add 200m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-200),
linewidth=c(0.5),
colour="black")+
# add coastline
geom_sf(data = world)+
coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAMaster, mapping = aes(LON, LAT), size = 1)+
geom_text(data = WGOAMaster, mapping = aes(LON, LAT, label = St_Ord ),
nudge_y = -0.05, size = 2.5)+
# formatting
scale_shape_discrete()+
theme_bw()+
xlab("Longitude")+
ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
GOARegion_Map_New
ggsave("GOA_IERP_AllSta_&_LINE8.png",path = here("Docs"), height = 8.5, width = 11, units = "in")
