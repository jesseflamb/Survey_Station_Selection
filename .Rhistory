mutate(Dist_NM = distGeo(cbind(LON,LAT),cbind(shift(LON),shift(LAT)))/(1000*1.852)) %>%
#  mutate(Dist_NM = acos((sin(lag(lat_rad))*sin(lat_rad))+(cos(lag(lat_rad))*cos(lat_rad)*cos(long_dif)))/(pi/180)*60) %>%
mutate(Steam_T = Dist_NM/Ship_Speed) %>%
mutate(Steam_T = lubridate::dhours(Steam_T))
# 2. rearrange data to calculate time to travel to and complete station operations
shipslog <- LLCsta %>% select(Station, Grid.ID, Station_Time, Steam_T) %>% # SRTdata will be replaced by filtered stations above
unite("Station",Station:Grid.ID, sep = "_", remove = FALSE) %>%
select(Station,Steam_T,Station_Time) %>%
gather(key="Ops", Time_Dur, -Station) %>% arrange(Station) %>%
separate(Station, c("Station","Grid.ID"), sep = "_") %>%
transform(Station = as.numeric(Station)) %>% arrange(Station)
LLCsta <- WGOAdata %>% filter(Station == 0 | Station >59)
# 1. Create data.frame that mirrors "Final Station Runtime"
SRTdata <- LLCsta %>% rename(LAT = Latitude.N., LON = Longitude..W.) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "NEU",0)) %>%
mutate(Gear.Sampled =  replace(Gear.Sampled,Gear.Sampled == "NEU, CTD","CTD")) %>%
mutate(Bongo_hrs = ifelse(Station > 0, 0.33,0)) %>%
mutate(CTD_hrs = ifelse(Gear.Sampled == "CTD",0.5,0)) %>%
mutate(CalVET_hrs = ifelse(Gear.Sampled == "CALVET", 0.33,0)) %>%
mutate(CalCTD_hrs = ifelse(Gear.Sampled == "CALVET, CTD",0.83,0)) %>%
#<<<<<<< Updated upstream
mutate(Station_Time = lubridate::dhours(rowSums(.[6:9]))) %>% mutate(Ship_Speed = 11) %>% # Variable
mutate(lat_rad = LAT*pi/180) %>% mutate(long_rad = LON*pi/180) %>%
mutate(long_dif = long_rad - shift(long_rad)) %>%
#>>>>>>> Stashed changes
mutate(Dist_NM = ifelse(Station == 0,0,0) ) %>%
mutate(Dist_NM = distGeo(cbind(LON,LAT),cbind(shift(LON),shift(LAT)))/(1000*1.852)) %>%
#  mutate(Dist_NM = acos((sin(lag(lat_rad))*sin(lat_rad))+(cos(lag(lat_rad))*cos(lat_rad)*cos(long_dif)))/(pi/180)*60) %>%
mutate(Steam_T = Dist_NM/Ship_Speed) %>%
mutate(Steam_T = lubridate::dhours(Steam_T))
# 2. rearrange data to calculate time to travel to and complete station operations
shipslog <- SRTdata %>% select(Station, Grid.ID, Station_Time, Steam_T) %>% # SRTdata will be replaced by filtered stations above
unite("Station",Station:Grid.ID, sep = "_", remove = FALSE) %>%
select(Station,Steam_T,Station_Time) %>%
gather(key="Ops", Time_Dur, -Station) %>% arrange(Station) %>%
separate(Station, c("Station","Grid.ID"), sep = "_") %>%
transform(Station = as.numeric(Station)) %>% arrange(Station)
shipslog <- na.omit(shipslog)
# 3. Choose Departure Date
depart <- ymd_hm("2023-05-14 12:00")
# 4. Create a table of Station Completion Times
ShipsLog <- shipslog %>% group_by(Station, Grid.ID) %>%
reframe(Time_Dur = lubridate::dseconds(sum(Time_Dur)))  %>%
mutate(Sta_Time =  depart) %>% mutate(cTime_Dur = cumsum(Time_Dur)) %>%
mutate(Sta_Time = cTime_Dur + Sta_Time) %>% select(Station, Grid.ID,Sta_Time)
View(ShipsLog)
View(ShipsLog)
View(WGOAdata)
LLCsta <- WGOAdata %>% filter(Station == 0 & Station >59)
LLCsta <- WGOAdata %>% filter(Station == 0 | Station >59 | Station < 225 | Station == 271)
View(LLCsta)
LLCvec <- c(0,59-225,271)
LLCvec
LLCvec <- c(0,59:225,271)
LLCvec
LLCsta <- WGOAdata %>% filter(Station %in% LLCvec)
View(LLCsta)
SRTdata <- LLCsta %>% rename(LAT = Latitude.N., LON = Longitude..W.) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "NEU",0)) %>%
mutate(Gear.Sampled =  replace(Gear.Sampled,Gear.Sampled == "NEU, CTD","CTD")) %>%
mutate(Bongo_hrs = ifelse(Station > 0, 0.33,0)) %>%
mutate(CTD_hrs = ifelse(Gear.Sampled == "CTD",0.5,0)) %>%
mutate(CalVET_hrs = ifelse(Gear.Sampled == "CALVET", 0.33,0)) %>%
mutate(CalCTD_hrs = ifelse(Gear.Sampled == "CALVET, CTD",0.83,0)) %>%
#<<<<<<< Updated upstream
mutate(Station_Time = lubridate::dhours(rowSums(.[6:9]))) %>% mutate(Ship_Speed = 11) %>% # Variable
mutate(lat_rad = LAT*pi/180) %>% mutate(long_rad = LON*pi/180) %>%
mutate(long_dif = long_rad - shift(long_rad)) %>%
#>>>>>>> Stashed changes
mutate(Dist_NM = ifelse(Station == 0,0,0) ) %>%
mutate(Dist_NM = distGeo(cbind(LON,LAT),cbind(shift(LON),shift(LAT)))/(1000*1.852)) %>%
#  mutate(Dist_NM = acos((sin(lag(lat_rad))*sin(lat_rad))+(cos(lag(lat_rad))*cos(lat_rad)*cos(long_dif)))/(pi/180)*60) %>%
mutate(Steam_T = Dist_NM/Ship_Speed) %>%
mutate(Steam_T = lubridate::dhours(Steam_T))
# 2. rearrange data to calculate time to travel to and complete station operations
shipslog <- SRTdata %>% select(Station, Grid.ID, Station_Time, Steam_T) %>% # SRTdata will be replaced by filtered stations above
unite("Station",Station:Grid.ID, sep = "_", remove = FALSE) %>%
select(Station,Steam_T,Station_Time) %>%
gather(key="Ops", Time_Dur, -Station) %>% arrange(Station) %>%
separate(Station, c("Station","Grid.ID"), sep = "_") %>%
transform(Station = as.numeric(Station)) %>% arrange(Station)
shipslog <- na.omit(shipslog)
# 3. Choose Departure Date
depart <- ymd_hm("2023-05-14 12:00")
# 4. Create a table of Station Completion Times
ShipsLog <- shipslog %>% group_by(Station, Grid.ID) %>%
reframe(Time_Dur = lubridate::dseconds(sum(Time_Dur)))  %>%
mutate(Sta_Time =  depart) %>% mutate(cTime_Dur = cumsum(Time_Dur)) %>%
mutate(Sta_Time = cTime_Dur + Sta_Time) %>% select(Station, Grid.ID,Sta_Time)
View(ShipsLog)
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.5), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(Longitude..W., Latitude.N., shape = Gear.Sampled), size = 1)+
geom_path(data = SRTdata, mapping = aes(Longitude..W., Latitude.N.,)) +
geom_text(data = SRTdata, mapping = aes(Longitude..W., Latitude.N., label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
StaMapF
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.5), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(LON, LAT, shape = Gear.Sampled), size = 1)+
geom_path(data = SRTdata, mapping = aes(LON, LAT,)) +
geom_text(data = SRTdata, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
StaMapF
glimpse(SRTdata)
unique(SRTdata$Gear.Sampled)
View(WGOAdata)
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.5), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(LON, LAT, shape = Gear.Sampled), size = 1)+
#geom_path(data = SRTdata, mapping = aes(LON, LAT)) +
geom_text(data = SRTdata, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
StaMapF
GOARegion_Map_New
unique(WGOAdata$Gear.Sampled)
glimpse(WGOAdata)
SRTdata <- LLCsta %>% rename(LAT = Latitude.N., LON = Longitude..W.) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "NEU",""))
View(SRTdata)
SRTdata <- LLCsta %>% rename(LAT = Latitude.N., LON = Longitude..W.) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "NEU",0))
View(SRTdata)
SRTdata <- LLCsta %>% rename(LAT = Latitude.N., LON = Longitude..W.) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "NEU","")) %>%
mutate(Gear.Sampled =  replace(Gear.Sampled,Gear.Sampled == "NEU, CTD","CTD")) %>%
mutate(Bongo_hrs = ifelse(Station > 0, 0.33,0)) %>%
mutate(CTD_hrs = ifelse(Gear.Sampled == "CTD",0.5,0)) %>%
mutate(CalVET_hrs = ifelse(Gear.Sampled == "CALVET", 0.33,0)) %>%
mutate(CalCTD_hrs = ifelse(Gear.Sampled == "CALVET, CTD",0.83,0)) %>%
#<<<<<<< Updated upstream
mutate(Station_Time = lubridate::dhours(rowSums(.[6:9]))) %>% mutate(Ship_Speed = 11) %>% # Variable
mutate(lat_rad = LAT*pi/180) %>% mutate(long_rad = LON*pi/180) %>%
mutate(long_dif = long_rad - shift(long_rad)) %>%
#>>>>>>> Stashed changes
mutate(Dist_NM = ifelse(Station == 0,0,0) ) %>%
mutate(Dist_NM = distGeo(cbind(LON,LAT),cbind(shift(LON),shift(LAT)))/(1000*1.852)) %>%
#  mutate(Dist_NM = acos((sin(lag(lat_rad))*sin(lat_rad))+(cos(lag(lat_rad))*cos(lat_rad)*cos(long_dif)))/(pi/180)*60) %>%
mutate(Steam_T = Dist_NM/Ship_Speed) %>%
mutate(Steam_T = lubridate::dhours(Steam_T))
View(SRTdata)
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.5), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(LON, LAT, shape = Gear.Sampled), size = 1)+
#geom_path(data = SRTdata, mapping = aes(LON, LAT)) +
geom_text(data = SRTdata, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
StaMapF
View(ShipsLog)
View(WGOAdata)
glimpse(WGOAdata)
glimpse(SRTdata)
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.5), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(LON, LAT, shape = Gear.Sampled), size = 1)
StaMapF
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.5), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(LON, LAT, shape = Gear.Sampled), size = 1)+
#geom_path(data = SRTdata, mapping = aes(LON, LAT)) +
#geom_text(data = SRTdata, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
StaMapF
wGOAdata <- WGOAdata %>% filter(Station %in% LLCvec)
View(WGOAdata)
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("tidyr",  "dplyr","lubridate","hms", "ggplot2", "ggmap", "lattice", "stringr", "data.table",
"tibble","readxl", "sf","maps", "mapdata", "mapplots", "mapview", "marmap", "Cairo", "ncdf4",
"oce", "here","reshape2", "viridis", "export", "rnaturalearth",
"rnaturalearthdata", "forcats","sf", "geosphere")
ipak(packages)
#Install Packages
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("tidyr",  "dplyr","lubridate","hms", "ggplot2", "ggmap", "lattice", "stringr", "data.table",
"tibble","readxl", "sf","maps", "mapdata", "mapplots", "mapview", "marmap", "Cairo", "ncdf4",
"oce", "here","reshape2", "viridis", "export", "rnaturalearth",
"rnaturalearthdata", "forcats","sf", "geosphere")
ipak(packages)
# Create a base Layer map of the core sampled areas, as per JL and LR meeting on 2023-02-16
# Create Base Layer Maps will all numbered stations labeled, with a more focused region (not whole WGOA)
world <- ne_countries(scale = "medium", returnclass = "sf")
class(world)
# Read in "late-larval core" region used for larval time-series, as shapefile:
# convert to Lat/lon projection.
shp.mp <- read_sf(dsn=here("Data","mapping_data","NewLateLarvalPolygon"),layer="Survey_poly")
shp.mp.LL<-st_transform(shp.mp,CRS("+proj=longlat"))
?sf::crs
?sf::CRS
shp.mp.LL<-st_transform(shp.mp,sf::CRS("+proj=longlat"))
shp.mp.LL<-st_transform(shp.mp,CRS("+proj=longlat"))
WGOAdata <- read.csv(here("Data","WGOA station_list_dougherty_2019_ProjInstrutions.csv"))
WGOAdata$Longitude..W. <- WGOAdata$Longitude..W.*-1
# get bathymetry data
b = getNOAA.bathy(lon1 = -166, lon2 = -140, lat1 = 52, lat2 = 62,
resolution = 15)
## Querying NOAA database ...
## This may take seconds to minutes, depending on grid size
## Building bathy matrix ...
# convert bathymetry to data frame
bf = fortify.bathy(b)
# get regional polygons
reg = map_data("world2Hires")
reg = subset(reg, region %in% c('USSR', 'USA'))
# convert lat longs
reg$long = (360 - reg$long)*-1
# set map limits, whole region
lons = c(-167, -149) #-140 = large map
lats = c(53, 62) # 52 = large map
######################################
# make plot
GOARegion_Map_New <- ggplot()+
# add 50m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-50),
linewidth=c(0.5),
colour="light grey")+
# add 100m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-100),
linewidth=c(0.5),
colour="darkgrey")+
# add 200m contour
geom_contour(data = bf,
aes(x=x, y=y, z=z),
breaks=c(-200),
linewidth=c(0.5),
colour="black")+
# add late larval "core" polygon
# geom_sf(data = shp.mp.LL, color="green", fill=NA, linewidth = 1.5) +
# add coastline
geom_sf(data = world)+
coord_sf(xlim = lons, ylim = lats, expand = FALSE)+
#Plot WGOA points
geom_point(data = WGOAdata, mapping = aes(Longitude..W., Latitude.N., shape = Gear.Sampled), size = 1)+
#Delete "shape..." for just stations
geom_text(data = WGOAdata, mapping = aes(Longitude..W., Latitude.N., label = Station ),
nudge_y = -0.08, size = 2.5)+
#station text size & nudge NOT IN 'aes' configure projection and plot domain coord_map(xlim = lons, ylim = lats)+
# formatting
scale_shape_discrete()+
theme_bw()+
xlab("Longitude")+
ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
GOARegion_Map_New
SRTdata <- LLCsta %>% rename(LAT = Latitude.N., LON = Longitude..W.) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "NEU","")) %>%
mutate(Gear.Sampled =  replace(Gear.Sampled,Gear.Sampled == "NEU, CTD","CTD")) %>%
mutate(Bongo_hrs = ifelse(Station > 0, 0.33,0)) %>%
mutate(CTD_hrs = ifelse(Gear.Sampled == "CTD",0.5,0)) %>%
mutate(CalVET_hrs = ifelse(Gear.Sampled == "CALVET", 0.33,0)) %>%
mutate(CalCTD_hrs = ifelse(Gear.Sampled == "CALVET, CTD",0.83,0)) %>%
#<<<<<<< Updated upstream
mutate(Station_Time = lubridate::dhours(rowSums(.[6:9]))) %>% mutate(Ship_Speed = 11) %>% # Variable
mutate(lat_rad = LAT*pi/180) %>% mutate(long_rad = LON*pi/180) %>%
mutate(long_dif = long_rad - shift(long_rad)) %>%
#>>>>>>> Stashed changes
mutate(Dist_NM = ifelse(Station == 0,0,0) ) %>%
mutate(Dist_NM = distGeo(cbind(LON,LAT),cbind(shift(LON),shift(LAT)))/(1000*1.852)) %>%
#  mutate(Dist_NM = acos((sin(lag(lat_rad))*sin(lat_rad))+(cos(lag(lat_rad))*cos(lat_rad)*cos(long_dif)))/(pi/180)*60) %>%
mutate(Steam_T = Dist_NM/Ship_Speed) %>%
mutate(Steam_T = lubridate::dhours(Steam_T))
LLCvec <- c(0,59:225,271)
LLCsta <- WGOAdata %>% filter(Station %in% LLCvec)
# 1. Create data.frame that mirrors "Final Station Runtime"
SRTdata <- LLCsta %>% rename(LAT = Latitude.N., LON = Longitude..W.) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "NEU","")) %>%
mutate(Gear.Sampled =  replace(Gear.Sampled,Gear.Sampled == "NEU, CTD","CTD")) %>%
mutate(Bongo_hrs = ifelse(Station > 0, 0.33,0)) %>%
mutate(CTD_hrs = ifelse(Gear.Sampled == "CTD",0.5,0)) %>%
mutate(CalVET_hrs = ifelse(Gear.Sampled == "CALVET", 0.33,0)) %>%
mutate(CalCTD_hrs = ifelse(Gear.Sampled == "CALVET, CTD",0.83,0)) %>%
#<<<<<<< Updated upstream
mutate(Station_Time = lubridate::dhours(rowSums(.[6:9]))) %>% mutate(Ship_Speed = 11) %>% # Variable
mutate(lat_rad = LAT*pi/180) %>% mutate(long_rad = LON*pi/180) %>%
mutate(long_dif = long_rad - shift(long_rad)) %>%
#>>>>>>> Stashed changes
mutate(Dist_NM = ifelse(Station == 0,0,0) ) %>%
mutate(Dist_NM = distGeo(cbind(LON,LAT),cbind(shift(LON),shift(LAT)))/(1000*1.852)) %>%
#  mutate(Dist_NM = acos((sin(lag(lat_rad))*sin(lat_rad))+(cos(lag(lat_rad))*cos(lat_rad)*cos(long_dif)))/(pi/180)*60) %>%
mutate(Steam_T = Dist_NM/Ship_Speed) %>%
mutate(Steam_T = lubridate::dhours(Steam_T))
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.5), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(LON, LAT, shape = Gear.Sampled), size = 1)+
#geom_path(data = SRTdata, mapping = aes(LON, LAT)) +
#geom_text(data = SRTdata, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
StaMapF
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.5), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(LON, LAT, shape = Gear.Sampled), size = 1)+
geom_path(data = SRTdata, mapping = aes(LON, LAT)) +
geom_text(data = SRTdata, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
StaMapF
LLCvec <- c(0,60:225,271)
LLCsta <- WGOAdata %>% filter(Station %in% LLCvec)
# 1. Create data.frame that mirrors "Final Station Runtime"
SRTdata <- LLCsta %>% rename(LAT = Latitude.N., LON = Longitude..W.) %>%
mutate(Gear.Sampled = replace(Gear.Sampled,Gear.Sampled == "NEU","")) %>%
mutate(Gear.Sampled =  replace(Gear.Sampled,Gear.Sampled == "NEU, CTD","CTD")) %>%
mutate(Bongo_hrs = ifelse(Station > 0, 0.33,0)) %>%
mutate(CTD_hrs = ifelse(Gear.Sampled == "CTD",0.5,0)) %>%
mutate(CalVET_hrs = ifelse(Gear.Sampled == "CALVET", 0.33,0)) %>%
mutate(CalCTD_hrs = ifelse(Gear.Sampled == "CALVET, CTD",0.83,0)) %>%
#<<<<<<< Updated upstream
mutate(Station_Time = lubridate::dhours(rowSums(.[6:9]))) %>% mutate(Ship_Speed = 11) %>% # Variable
mutate(lat_rad = LAT*pi/180) %>% mutate(long_rad = LON*pi/180) %>%
mutate(long_dif = long_rad - shift(long_rad)) %>%
#>>>>>>> Stashed changes
mutate(Dist_NM = ifelse(Station == 0,0,0) ) %>%
mutate(Dist_NM = distGeo(cbind(LON,LAT),cbind(shift(LON),shift(LAT)))/(1000*1.852)) %>%
#  mutate(Dist_NM = acos((sin(lag(lat_rad))*sin(lat_rad))+(cos(lag(lat_rad))*cos(lat_rad)*cos(long_dif)))/(pi/180)*60) %>%
mutate(Steam_T = Dist_NM/Ship_Speed) %>%
mutate(Steam_T = lubridate::dhours(Steam_T))
# 2. rearrange data to calculate time to travel to and complete station operations
shipslog <- SRTdata %>% select(Station, Grid.ID, Station_Time, Steam_T) %>% # SRTdata will be replaced by filtered stations above
unite("Station",Station:Grid.ID, sep = "_", remove = FALSE) %>%
select(Station,Steam_T,Station_Time) %>%
gather(key="Ops", Time_Dur, -Station) %>% arrange(Station) %>%
separate(Station, c("Station","Grid.ID"), sep = "_") %>%
transform(Station = as.numeric(Station)) %>% arrange(Station)
shipslog <- na.omit(shipslog)
# 3. Choose Departure Date
depart <- ymd_hm("2023-05-14 12:00")
# 4. Create a table of Station Completion Times
ShipsLog <- shipslog %>% group_by(Station, Grid.ID) %>%
reframe(Time_Dur = lubridate::dseconds(sum(Time_Dur)))  %>%
mutate(Sta_Time =  depart) %>% mutate(cTime_Dur = cumsum(Time_Dur)) %>%
mutate(Sta_Time = cTime_Dur + Sta_Time) %>% select(Station, Grid.ID,Sta_Time)
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.5), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(LON, LAT, shape = Gear.Sampled), size = 1)+
geom_path(data = SRTdata, mapping = aes(LON, LAT)) +
geom_text(data = SRTdata, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
StaMapF
View(ShipsLog)
ggsave("SpringLarval_ST60_ST225_2023_Gear&StationNo.png",path = here("Docs"), height = 8.5, width = 11, units = "in")
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.3), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(LON, LAT, shape = Gear.Sampled), size = 2)+
geom_path(data = SRTdata, mapping = aes(LON, LAT)) +
geom_text(data = SRTdata, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
StaMapF
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.3), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(LON, LAT, shape = Gear.Sampled), size = 1.25)+
geom_path(data = SRTdata, mapping = aes(LON, LAT)) +
geom_text(data = SRTdata, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
StaMapF
ggsave("SpringLarval_ST60_ST225_2023_Gear&StationNo.png",path = here("Docs"), height = 8.5, width = 11, units = "in")
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.3), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(LON, LAT, shape = Gear.Sampled), size = 1)+
geom_path(data = SRTdata, mapping = aes(LON, LAT), linewidth = 1) +
geom_text(data = SRTdata, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
StaMapF
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.3), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(LON, LAT, shape = Gear.Sampled), size = 1)+
geom_path(data = SRTdata, mapping = aes(LON, LAT), linewidth = 0.25) +
geom_text(data = SRTdata, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
StaMapF
ggsave("SpringLarval_ST60_ST225_2023_Gear&StationNo.png",path = here("Docs"), height = 8.5, width = 11, units = "in")
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("tidyr",  "dplyr","lubridate","hms", "ggplot2", "ggmap", "lattice", "stringr", "data.table",
"tibble","readxl", "sf","maps", "mapdata", "mapplots", "mapview", "marmap", "Cairo", "ncdf4",
"oce", "here","reshape2", "viridis", "export", "rnaturalearth",
"rnaturalearthdata", "forcats","sf", "geosphere")
ipak(packages)
install.packages(c("ggmap", "rlang", "sf"))
install.packages(c("ggmap", "rlang", "sf"))
install.packages(c("ggmap", "rlang", "sf"))
ipak <- function(pkg){
new.pkg <- pkg[!(pkg %in% installed.packages()[, "Package"])]
if (length(new.pkg))
install.packages(new.pkg, dependencies = TRUE)
sapply(pkg, require, character.only = TRUE)
}
packages <- c("tidyr",  "dplyr","lubridate","hms", "ggplot2", "ggmap", "lattice", "stringr", "data.table",
"tibble","readxl", "sf","maps", "mapdata", "mapplots", "mapview", "marmap", "Cairo", "ncdf4",
"oce", "here","reshape2", "viridis", "export", "rnaturalearth",
"rnaturalearthdata", "forcats","sf", "geosphere")
ipak(packages)
WGOAdata$Longitude..W. <- WGOAdata$Longitude..W.*-1
# get bathymetry data
b = getNOAA.bathy(lon1 = -166, lon2 = -140, lat1 = 52, lat2 = 62,
resolution = 15)
## Querying NOAA database ...
## This may take seconds to minutes, depending on grid size
## Building bathy matrix ...
# convert bathymetry to data frame
bf = fortify.bathy(b)
# get regional polygons
reg = map_data("world2Hires")
reg = subset(reg, region %in% c('USSR', 'USA'))
# convert lat longs
reg$long = (360 - reg$long)*-1
# set map limits, whole region
lons = c(-167, -149) #-140 = large map
lats = c(53, 60.25) # 52 = large map
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.3), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(LON, LAT, shape = Gear.Sampled), size = 1)+
geom_path(data = SRTdata, mapping = aes(LON, LAT), linewidth = 0.25) +
geom_text(data = SRTdata, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
StaMapF
ggsave("SpringLarval_ST60_ST225_2023_Gear&StationNo.png",path = here("Docs"), height = 8.5, width = 11, units = "in")
StaMapF <-ggplot()+geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-50),linewidth=c(0.5),colour="light grey")+ # add 50m contour
geom_contour(data = bf, aes(x=x, y=y, z=z), breaks=c(-100), linewidth=c(0.5), colour="darkgrey")+ # add 100m contour
geom_contour(data = bf, aes(x=x, y=y, z=z),breaks=c(-200),linewidth=c(0.3), colour="black")+ # add 200m contour
geom_sf(data = world)+coord_sf(xlim = lons, ylim = lats, expand = FALSE)+ # add coastline
#Plot points & station track
geom_point(data = SRTdata, mapping = aes(LON, LAT, shape = Gear.Sampled), size = 1)+
geom_path(data = SRTdata, mapping = aes(LON, LAT), linewidth = 0.25) +
geom_text(data = SRTdata, mapping = aes(LON, LAT, label = Station ), nudge_y = -0.08, size = 2.5)+
scale_shape_discrete()+ theme_bw()+xlab("Longitude")+ylab("Latitude")+ ggtitle("Late Larval Core to 225") +
theme(axis.text.x=element_text(size=10, color = "black"), axis.text.y = element_text(size=10, color = "black"))
StaMapF
ggsave("SpringLarval_ST60_ST225_2023_Gear&StationNo.png",path = here("Docs"), height = 8.5, width = 11, units = "in")
count(LLCsta$Gear.Sampled == "CTD")
count(LLCsta$Gear.Sampled = "CTD")
table(LLCsta$Gear.Sampled)
View(LLCsta)
View(ShipsLog)
ALLsTA <- c(0:271)
AllOther <- AllsTA - LLCvec
AllSta <- c(0:271)
AllOther <- AllSta - LLCvec
AllOther
?setdiff
x <- setdiff(AllSta,LLCvec)
x
